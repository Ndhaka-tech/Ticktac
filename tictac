def print_board(board):
  """Prints the current state of the board."""
  for row in board:
    print(" | ".join(row))
    print("-" * 9)

def check_winner(board):
  """Checks if there's a winner or a tie."""
  # Check rows
  for row in board:
    if row[0] == row[1] == row[2] and row[0] != ' ':
      return row[0]
  # Check columns
  for col in range(3):
    if board[0][col] == board[1][col] == board[2][col] and board[0][col] != ' ':
      return board[0][col]
  # Check diagonals
  if board[0][0] == board[1][1] == board[2][2] and board[0][0] != ' ':
    return board[0][0]
  if board[0][2] == board[1][1] == board[2][0] and board[0][2] != ' ':
    return board[0][2]
  # Check for tie
  if all(all(cell != ' ' for cell in row) for row in board):
    return "Tie"
  return None

def play_game():
  """Plays a game of tic-tac-toe."""
  board = [[' ' for _ in range(3)] for _ in range(3)]
  current_player = 'X'
  while True:
    print_board(board)
    row = int(input(f"Player {current_player}, enter the row (1-3): ")) - 1
    col = int(input(f"Player {current_player}, enter the column (1-3): ")) - 1
    if board[row][col] != ' ':
      print("Invalid move. Try again.")
      continue
    board[row][col] = current_player
    winner = check_winner(board)
    if winner:
      print_board(board)
      print(f"Player {winner} wins!")
      break
    current_player = 'O' if current_player == 'X' else 'X'

if __name__ == "__main__":
  play_game()
